package compsci

import (
	"sort"
	"testing"

	"github.com/stretchr/testify/suite"
)

type mergeSortSuite struct {
	suite.Suite
}

func (s *mergeSortSuite) TestSort10() {
	items := []int{9, 2, 4, 1, 5, 7, 3, 8, 6, 0}

	s.Equal(
		[]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9},
		MergeSort(items),
	)
}

func (s *mergeSortSuite) TestSort100() {
	items := []int{615, 442, 658, 179, 336, 231, 102, 977, 718, 409, 299, 902, 674, 37, 300, 21, 510, 616, 947, 514, 663, 23, 127, 563, 910, 927, 706, 222, 798, 198, 184, 129, 509, 80, 962, 315, 550, 56, 631, 765, 561, 535, 574, 109, 225, 520, 35, 659, 408, 194, 645, 727, 613, 183, 841, 932, 622, 139, 635, 297, 31, 430, 248, 879, 852, 135, 828, 316, 208, 276, 590, 801, 117, 556, 663, 894, 911, 445, 607, 749, 984, 142, 521, 56, 879, 564, 894, 678, 573, 749, 377, 977, 463, 918, 747, 558, 464, 241, 145, 753}

	s.Equal(
		[]int{21, 23, 31, 35, 37, 56, 56, 80, 102, 109, 117, 127, 129, 135, 139, 142, 145, 179, 183, 184, 194, 198, 208, 222, 225, 231, 241, 248, 276, 297, 299, 300, 315, 316, 336, 377, 408, 409, 430, 442, 445, 463, 464, 509, 510, 514, 520, 521, 535, 550, 556, 558, 561, 563, 564, 573, 574, 590, 607, 613, 615, 616, 622, 631, 635, 645, 658, 659, 663, 663, 674, 678, 706, 718, 727, 747, 749, 749, 753, 765, 798, 801, 828, 841, 852, 879, 879, 894, 894, 902, 910, 911, 918, 927, 932, 947, 962, 977, 977, 984},
		MergeSort(items),
	)
}

func (s *mergeSortSuite) TestSort500() {
	items := []int{616, 942, 265, 497, 587, 811, 678, 198, 146, 927, 77, 192, 862, 746, 172, 198, 707, 315, 998, 598, 187, 261, 881, 943, 285, 590, 165, 741, 713, 570, 648, 551, 916, 702, 926, 563, 252, 7, 83, 460, 500, 955, 535, 79, 154, 938, 782, 374, 683, 56, 598, 26, 568, 594, 85, 375, 762, 158, 8, 952, 16, 263, 321, 696, 826, 427, 721, 364, 607, 760, 399, 663, 216, 930, 491, 445, 210, 367, 704, 706, 107, 778, 105, 538, 421, 582, 933, 496, 62, 823, 651, 907, 42, 178, 497, 168, 377, 845, 486, 376, 479, 76, 786, 927, 353, 314, 423, 175, 176, 306, 922, 721, 909, 238, 934, 212, 112, 531, 635, 631, 915, 719, 484, 888, 361, 403, 970, 904, 757, 569, 775, 796, 166, 687, 170, 693, 693, 316, 472, 249, 480, 650, 695, 909, 990, 977, 329, 263, 937, 13, 628, 958, 574, 768, 922, 42, 364, 547, 898, 959, 794, 734, 739, 355, 380, 964, 428, 928, 768, 58, 553, 22, 474, 16, 223, 337, 94, 313, 832, 372, 483, 864, 992, 617, 979, 775, 374, 659, 342, 565, 167, 476, 888, 963, 732, 682, 248, 903, 297, 264, 454, 503, 460, 497, 786, 710, 453, 137, 974, 755, 849, 381, 179, 299, 422, 245, 458, 792, 34, 186, 10, 250, 741, 304, 203, 976, 751, 462, 870, 427, 936, 663, 957, 225, 37, 745, 865, 205, 6, 229, 846, 133, 140, 800, 268, 405, 619, 770, 544, 898, 683, 160, 271, 309, 222, 276, 261, 370, 709, 456, 700, 334, 979, 5, 674, 623, 836, 415, 804, 357, 949, 0, 362, 762, 546, 483, 887, 199, 262, 100, 72, 71, 937, 985, 106, 636, 276, 976, 716, 623, 581, 213, 672, 695, 323, 358, 489, 118, 456, 585, 580, 830, 824, 590, 338, 827, 816, 951, 836, 84, 632, 289, 319, 911, 359, 237, 829, 843, 729, 969, 974, 220, 61, 112, 432, 407, 3, 696, 867, 909, 239, 423, 80, 733, 652, 273, 418, 302, 153, 622, 363, 924, 687, 771, 584, 89, 210, 863, 569, 442, 832, 63, 998, 837, 485, 668, 911, 539, 164, 156, 144, 819, 649, 630, 328, 596, 413, 618, 654, 583, 154, 350, 621, 443, 933, 58, 845, 242, 577, 550, 138, 934, 468, 511, 562, 713, 464, 126, 699, 949, 101, 116, 260, 907, 889, 822, 22, 491, 313, 204, 489, 595, 345, 593, 193, 428, 588, 276, 572, 364, 17, 366, 587, 863, 674, 944, 637, 777, 548, 299, 794, 594, 303, 681, 848, 219, 415, 322, 74, 198, 643, 98, 178, 67, 199, 63, 424, 288, 136, 276, 766, 661, 885, 511, 487, 974, 995, 676, 92, 695, 471, 740, 809, 57, 699, 171, 531, 891, 151, 201, 902, 140, 408, 110, 499, 300, 814, 387, 197, 294, 519, 137, 935, 540, 364, 296, 876, 502, 702, 521, 9, 36, 394, 500, 489, 1000, 242, 628, 584, 767, 377, 829, 689, 263, 866, 953, 428, 756, 401, 177}

	s.Equal(
		[]int{0, 3, 5, 6, 7, 8, 9, 10, 13, 16, 16, 17, 22, 22, 26, 34, 36, 37, 42, 42, 56, 57, 58, 58, 61, 62, 63, 63, 67, 71, 72, 74, 76, 77, 79, 80, 83, 84, 85, 89, 92, 94, 98, 100, 101, 105, 106, 107, 110, 112, 112, 116, 118, 126, 133, 136, 137, 137, 138, 140, 140, 144, 146, 151, 153, 154, 154, 156, 158, 160, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 178, 179, 186, 187, 192, 193, 197, 198, 198, 198, 199, 199, 201, 203, 204, 205, 210, 210, 212, 213, 216, 219, 220, 222, 223, 225, 229, 237, 238, 239, 242, 242, 245, 248, 249, 250, 252, 260, 261, 261, 262, 263, 263, 263, 264, 265, 268, 271, 273, 276, 276, 276, 276, 285, 288, 289, 294, 296, 297, 299, 299, 300, 302, 303, 304, 306, 309, 313, 313, 314, 315, 316, 319, 321, 322, 323, 328, 329, 334, 337, 338, 342, 345, 350, 353, 355, 357, 358, 359, 361, 362, 363, 364, 364, 364, 364, 366, 367, 370, 372, 374, 374, 375, 376, 377, 377, 380, 381, 387, 394, 399, 401, 403, 405, 407, 408, 413, 415, 415, 418, 421, 422, 423, 423, 424, 427, 427, 428, 428, 428, 432, 442, 443, 445, 453, 454, 456, 456, 458, 460, 460, 462, 464, 468, 471, 472, 474, 476, 479, 480, 483, 483, 484, 485, 486, 487, 489, 489, 489, 491, 491, 496, 497, 497, 497, 499, 500, 500, 502, 503, 511, 511, 519, 521, 531, 531, 535, 538, 539, 540, 544, 546, 547, 548, 550, 551, 553, 562, 563, 565, 568, 569, 569, 570, 572, 574, 577, 580, 581, 582, 583, 584, 584, 585, 587, 587, 588, 590, 590, 593, 594, 594, 595, 596, 598, 598, 607, 616, 617, 618, 619, 621, 622, 623, 623, 628, 628, 630, 631, 632, 635, 636, 637, 643, 648, 649, 650, 651, 652, 654, 659, 661, 663, 663, 668, 672, 674, 674, 676, 678, 681, 682, 683, 683, 687, 687, 689, 693, 693, 695, 695, 695, 696, 696, 699, 699, 700, 702, 702, 704, 706, 707, 709, 710, 713, 713, 716, 719, 721, 721, 729, 732, 733, 734, 739, 740, 741, 741, 745, 746, 751, 755, 756, 757, 760, 762, 762, 766, 767, 768, 768, 770, 771, 775, 775, 777, 778, 782, 786, 786, 792, 794, 794, 796, 800, 804, 809, 811, 814, 816, 819, 822, 823, 824, 826, 827, 829, 829, 830, 832, 832, 836, 836, 837, 843, 845, 845, 846, 848, 849, 862, 863, 863, 864, 865, 866, 867, 870, 876, 881, 885, 887, 888, 888, 889, 891, 898, 898, 902, 903, 904, 907, 907, 909, 909, 909, 911, 911, 915, 916, 922, 922, 924, 926, 927, 927, 928, 930, 933, 933, 934, 934, 935, 936, 937, 937, 938, 942, 943, 944, 949, 949, 951, 952, 953, 955, 957, 958, 959, 963, 964, 969, 970, 974, 974, 974, 976, 976, 977, 979, 979, 985, 990, 992, 995, 998, 998, 1000},
		MergeSort(items),
	)
}

// BenchmarkMergeSort10-8   	  557678	      1926 ns/op	     696 B/op	      27 allocs/op
func BenchmarkMergeSort10(t *testing.B) {
	for i := 0; i < t.N; i++ {
		items := []int{9, 2, 4, 1, 5, 7, 3, 8, 6, 0}

		MergeSort(items)
	}
}

// BenchmarkMergeSort100-8   	   42212	     29244 ns/op	   12648 B/op	     318 allocs/op
func BenchmarkMergeSort100(t *testing.B) {
	for i := 0; i < t.N; i++ {
		items := []int{615, 442, 658, 179, 336, 231, 102, 977, 718, 409, 299, 902, 674, 37, 300, 21, 510, 616, 947, 514, 663, 23, 127, 563, 910, 927, 706, 222, 798, 198, 184, 129, 509, 80, 962, 315, 550, 56, 631, 765, 561, 535, 574, 109, 225, 520, 35, 659, 408, 194, 645, 727, 613, 183, 841, 932, 622, 139, 635, 297, 31, 430, 248, 879, 852, 135, 828, 316, 208, 276, 590, 801, 117, 556, 663, 894, 911, 445, 607, 749, 984, 142, 521, 56, 879, 564, 894, 678, 573, 749, 377, 977, 463, 918, 747, 558, 464, 241, 145, 753}

		MergeSort(items)
	}
}

// BenchmarkMergeSort500-8   	    6904	    150730 ns/op	   69352 B/op	    1500 allocs/op
func BenchmarkMergeSort500(t *testing.B) {
	for i := 0; i < t.N; i++ {
		items := []int{616, 942, 265, 497, 587, 811, 678, 198, 146, 927, 77, 192, 862, 746, 172, 198, 707, 315, 998, 598, 187, 261, 881, 943, 285, 590, 165, 741, 713, 570, 648, 551, 916, 702, 926, 563, 252, 7, 83, 460, 500, 955, 535, 79, 154, 938, 782, 374, 683, 56, 598, 26, 568, 594, 85, 375, 762, 158, 8, 952, 16, 263, 321, 696, 826, 427, 721, 364, 607, 760, 399, 663, 216, 930, 491, 445, 210, 367, 704, 706, 107, 778, 105, 538, 421, 582, 933, 496, 62, 823, 651, 907, 42, 178, 497, 168, 377, 845, 486, 376, 479, 76, 786, 927, 353, 314, 423, 175, 176, 306, 922, 721, 909, 238, 934, 212, 112, 531, 635, 631, 915, 719, 484, 888, 361, 403, 970, 904, 757, 569, 775, 796, 166, 687, 170, 693, 693, 316, 472, 249, 480, 650, 695, 909, 990, 977, 329, 263, 937, 13, 628, 958, 574, 768, 922, 42, 364, 547, 898, 959, 794, 734, 739, 355, 380, 964, 428, 928, 768, 58, 553, 22, 474, 16, 223, 337, 94, 313, 832, 372, 483, 864, 992, 617, 979, 775, 374, 659, 342, 565, 167, 476, 888, 963, 732, 682, 248, 903, 297, 264, 454, 503, 460, 497, 786, 710, 453, 137, 974, 755, 849, 381, 179, 299, 422, 245, 458, 792, 34, 186, 10, 250, 741, 304, 203, 976, 751, 462, 870, 427, 936, 663, 957, 225, 37, 745, 865, 205, 6, 229, 846, 133, 140, 800, 268, 405, 619, 770, 544, 898, 683, 160, 271, 309, 222, 276, 261, 370, 709, 456, 700, 334, 979, 5, 674, 623, 836, 415, 804, 357, 949, 0, 362, 762, 546, 483, 887, 199, 262, 100, 72, 71, 937, 985, 106, 636, 276, 976, 716, 623, 581, 213, 672, 695, 323, 358, 489, 118, 456, 585, 580, 830, 824, 590, 338, 827, 816, 951, 836, 84, 632, 289, 319, 911, 359, 237, 829, 843, 729, 969, 974, 220, 61, 112, 432, 407, 3, 696, 867, 909, 239, 423, 80, 733, 652, 273, 418, 302, 153, 622, 363, 924, 687, 771, 584, 89, 210, 863, 569, 442, 832, 63, 998, 837, 485, 668, 911, 539, 164, 156, 144, 819, 649, 630, 328, 596, 413, 618, 654, 583, 154, 350, 621, 443, 933, 58, 845, 242, 577, 550, 138, 934, 468, 511, 562, 713, 464, 126, 699, 949, 101, 116, 260, 907, 889, 822, 22, 491, 313, 204, 489, 595, 345, 593, 193, 428, 588, 276, 572, 364, 17, 366, 587, 863, 674, 944, 637, 777, 548, 299, 794, 594, 303, 681, 848, 219, 415, 322, 74, 198, 643, 98, 178, 67, 199, 63, 424, 288, 136, 276, 766, 661, 885, 511, 487, 974, 995, 676, 92, 695, 471, 740, 809, 57, 699, 171, 531, 891, 151, 201, 902, 140, 408, 110, 499, 300, 814, 387, 197, 294, 519, 137, 935, 540, 364, 296, 876, 502, 702, 521, 9, 36, 394, 500, 489, 1000, 242, 628, 584, 767, 377, 829, 689, 263, 866, 953, 428, 756, 401, 177}

		MergeSort(items)
	}
}

// BenchmarkQuickSort500-8   	  187888	      6108 ns/op	    4152 B/op	       3 allocs/op
func BenchmarkQuickSort500(t *testing.B) {
	for n := 0; n < t.N; n++ {
		items := []int{616, 942, 265, 497, 587, 811, 678, 198, 146, 927, 77, 192, 862, 746, 172, 198, 707, 315, 998, 598, 187, 261, 881, 943, 285, 590, 165, 741, 713, 570, 648, 551, 916, 702, 926, 563, 252, 7, 83, 460, 500, 955, 535, 79, 154, 938, 782, 374, 683, 56, 598, 26, 568, 594, 85, 375, 762, 158, 8, 952, 16, 263, 321, 696, 826, 427, 721, 364, 607, 760, 399, 663, 216, 930, 491, 445, 210, 367, 704, 706, 107, 778, 105, 538, 421, 582, 933, 496, 62, 823, 651, 907, 42, 178, 497, 168, 377, 845, 486, 376, 479, 76, 786, 927, 353, 314, 423, 175, 176, 306, 922, 721, 909, 238, 934, 212, 112, 531, 635, 631, 915, 719, 484, 888, 361, 403, 970, 904, 757, 569, 775, 796, 166, 687, 170, 693, 693, 316, 472, 249, 480, 650, 695, 909, 990, 977, 329, 263, 937, 13, 628, 958, 574, 768, 922, 42, 364, 547, 898, 959, 794, 734, 739, 355, 380, 964, 428, 928, 768, 58, 553, 22, 474, 16, 223, 337, 94, 313, 832, 372, 483, 864, 992, 617, 979, 775, 374, 659, 342, 565, 167, 476, 888, 963, 732, 682, 248, 903, 297, 264, 454, 503, 460, 497, 786, 710, 453, 137, 974, 755, 849, 381, 179, 299, 422, 245, 458, 792, 34, 186, 10, 250, 741, 304, 203, 976, 751, 462, 870, 427, 936, 663, 957, 225, 37, 745, 865, 205, 6, 229, 846, 133, 140, 800, 268, 405, 619, 770, 544, 898, 683, 160, 271, 309, 222, 276, 261, 370, 709, 456, 700, 334, 979, 5, 674, 623, 836, 415, 804, 357, 949, 0, 362, 762, 546, 483, 887, 199, 262, 100, 72, 71, 937, 985, 106, 636, 276, 976, 716, 623, 581, 213, 672, 695, 323, 358, 489, 118, 456, 585, 580, 830, 824, 590, 338, 827, 816, 951, 836, 84, 632, 289, 319, 911, 359, 237, 829, 843, 729, 969, 974, 220, 61, 112, 432, 407, 3, 696, 867, 909, 239, 423, 80, 733, 652, 273, 418, 302, 153, 622, 363, 924, 687, 771, 584, 89, 210, 863, 569, 442, 832, 63, 998, 837, 485, 668, 911, 539, 164, 156, 144, 819, 649, 630, 328, 596, 413, 618, 654, 583, 154, 350, 621, 443, 933, 58, 845, 242, 577, 550, 138, 934, 468, 511, 562, 713, 464, 126, 699, 949, 101, 116, 260, 907, 889, 822, 22, 491, 313, 204, 489, 595, 345, 593, 193, 428, 588, 276, 572, 364, 17, 366, 587, 863, 674, 944, 637, 777, 548, 299, 794, 594, 303, 681, 848, 219, 415, 322, 74, 198, 643, 98, 178, 67, 199, 63, 424, 288, 136, 276, 766, 661, 885, 511, 487, 974, 995, 676, 92, 695, 471, 740, 809, 57, 699, 171, 531, 891, 151, 201, 902, 140, 408, 110, 499, 300, 814, 387, 197, 294, 519, 137, 935, 540, 364, 296, 876, 502, 702, 521, 9, 36, 394, 500, 489, 1000, 242, 628, 584, 767, 377, 829, 689, 263, 866, 953, 428, 756, 401, 177}

		sort.SliceStable(items, func(i, j int) bool {
			return i < j
		})
	}
}

func TestMergeSortSuite(t *testing.T) {
	suite.Run(t, new(mergeSortSuite))
}
